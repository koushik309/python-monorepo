name: Release Management
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # Daily check at 00:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  version_check:
    name: Check and Update Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Get current versions
        id: current_versions
        run: |
          echo "REPOB_CURRENT=$(cat source/code/RepoB/version.txt)" >> $GITHUB_OUTPUT
          echo "SERVICEB_CURRENT=$(cat source/code/service-b/version.txt)" >> $GITHUB_OUTPUT

      - name: Get latest RepoB version
        id: repob_latest
        run: |
          VERSION=$(curl -sL https://api.github.com/repos/koushik309/RepoB/releases/latest | jq -r '.tag_name')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest service-b version
        id: serviceb_latest
        run: |
          VERSION=$(curl -sL https://api.github.com/repos/koushik309/service-b/releases/latest | jq -r '.tag_name')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if updates are needed
        id: check_updates
        run: |
          needs_update=false
          repob_update=false
          serviceb_update=false
          
          if [[ "${{ steps.repob_latest.outputs.version }}" != "${{ steps.current_versions.outputs.REPOB_CURRENT }}" ]]; then
            echo "RepoB update needed: ${{ steps.current_versions.outputs.REPOB_CURRENT }} → ${{ steps.repob_latest.outputs.version }}"
            echo "REPOB_UPDATE=true" >> $GITHUB_ENV
            needs_update=true
            repob_update=true
          fi
          
          if [[ "${{ steps.serviceb_latest.outputs.version }}" != "${{ steps.current_versions.outputs.SERVICEB_CURRENT }}" ]]; then
            echo "service-b update needed: ${{ steps.current_versions.outputs.SERVICEB_CURRENT }} → ${{ steps.serviceb_latest.outputs.version }}"
            echo "SERVICEB_UPDATE=true" >> $GITHUB_ENV
            needs_update=true
            serviceb_update=true
          fi
          
          echo "repob_update=$repob_update" >> $GITHUB_OUTPUT
          echo "serviceb_update=$serviceb_update" >> $GITHUB_OUTPUT
          echo "updates_needed=$needs_update" >> $GITHUB_OUTPUT

      - name: Update version files
        if: ${{ steps.check_updates.outputs.updates_needed == 'true' }}
        run: |
          if ${{ steps.check_updates.outputs.repob_update == 'true' }}; then
            echo "${{ steps.repob_latest.outputs.version }}" > source/code/RepoB/version.txt
          fi
          
          if ${{ steps.check_updates.outputs.serviceb_update == 'true' }}; then
            echo "${{ steps.serviceb_latest.outputs.version }}" > source/code/service-b/version.txt
          fi

      - name: Create Pull Request
        if: ${{ steps.check_updates.outputs.updates_needed == 'true' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "chore: update dependency versions"
          title: "chore: update dependencies to ${{ steps.repob_latest.outputs.version }} and ${{ steps.serviceb_latest.outputs.version }}"
          body: |
            Updated dependency versions:
            - RepoB: ${{ steps.current_versions.outputs.REPOB_CURRENT }} → ${{ steps.repob_latest.outputs.version }}
            - service-b: ${{ steps.current_versions.outputs.SERVICEB_CURRENT }} → ${{ steps.serviceb_latest.outputs.version }}
          branch: "dep-update-${{ github.run_id }}"
          base: main
          labels: dependencies, automated

  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    needs: version_check
    if: ${{ needs.version_check.outputs.updates_needed == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Run Release Please
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          config-file: "release-please-config.json"
          release-type: node
          package-name: "python-monorepo"
          monorepo-tags: true
          bump-minor-pre-major: true
          include-v-in-tag: true
          pull-request-title-pattern: "chore: release ${version}"
          changelog-types: |
            [{"type":"feat","section":"Features","hidden":false},
             {"type":"fix","section":"Bug Fixes","hidden":false},
             {"type":"chore","section":"Maintenance","hidden":false}]